
$bubble-count: 15;
$sway-type: "sway-left-to-right", "sway-right-to-left";

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

@function sample($list) {
  @return nth($list, random(length($list)));
}

.bubbles {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 120vh;
  z-index: -10;
  overflow: hidden;
}


.bubble {
  position: absolute;
  left: var(--bubble-left-offset);
  bottom: -75%;
  display: block;
  width: var(--bubble-radius);
  height: var(--bubble-radius);
  border-radius: 50%;
  animation: float-up var(--bubble-float-duration) var(--bubble-float-delay) ease-in infinite;

  &::before {
    position: absolute;
    content: '';
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: hsla(0, 0%, 100%,.1);
    border-radius: inherit;
    animation: var(--bubble-sway-type) var(--bubble-sway-duration) var(--bubble-sway-delay) ease-in-out alternate infinite;
  }

  @for $i from 0 through $bubble-count {
    &:nth-child(#{$i}) {
      --bubble-left-offset: #{random_range(0vw, 100vw)};
      --bubble-radius: #{random_range(1vw, 10vw)};
      --bubble-float-duration: #{random_range(15s, 30s)};
      --bubble-sway-duration: #{random_range(4s, 6s)};
      --bubble-float-delay: #{random_range(0s, 4s)};
      --bubble-sway-delay: #{random_range(0s, 2s)};
      --bubble-sway-type: #{sample($sway-type)};
    }
  }
}

@keyframes float-up {
  to {
    transform: translateY(-225vh);
  }
}

@keyframes sway-left-to-right {
  from {
    transform: translateX(-100%);
  }

  to {
    transform: translateX(100%);
  }
}

@keyframes sway-right-to-left {
  from {
    transform: translateX(100%);
  }

  to {
    transform: translateX(-100%);
  }
}

.bubbles-2 {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: 120vh;
    z-index: -10;
    overflow: hidden;
  }


  // Cursor


  

  
  .link {	
    display: flex;
    align-items: center;
    z-index: 50;
    justify-content: center;
    width: var(--size);
    height: var(--size);
    // background: rgba(255, 255, 255, .1);
    background: transparent;
    padding: 0.15em .35em;
    border-radius: 10px;
  }
  
  .button {
    appearance: none;
    border: none;
    color: white;
    cursor: inherit;
    z-index: 50;
    // background: rgba(255, 255, 255, .1);
    border-radius: 25px;
  }

  .primary-buttonn {
    width: 18.625rem;
    box-sizing: border-box;
    cursor: pointer;
    height: 2.8125rem;
    font-size: 0.875rem;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    color: #fff;
    box-shadow: rgba(0, 0, 0, 0.25) 0 0.0625rem 0.125rem 0,
      rgba(0, 0, 0, 0.15) 0 0.0625rem 0.1875rem 0;
    background: #2240f5;
    outline: 0;
    border: 0;
    padding: 0 1.5625rem;
    border-radius: 0.25rem;
    transition: background-color 0.28s cubic-bezier(0.4, 0, 0.2, 1),
      color 0.28s cubic-bezier(0.4, 0, 0.2, 1),
      box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);
  
    &:hover,
    &:focus {
      box-shadow: 0 0.05rem 0.5rem 0 rgba(34, 64, 245, 0.22),
        0 0.25rem 0.5rem 0 rgba(34, 64, 245, 0.3);
    }
  
    &.loading {
      cursor: progress;
      background: #00a2ff;
    }
  }


  
  .button-spinner {
    cursor: pointer;
    height: 1.25rem;
    position: relative;
    overflow: hidden;
    transition: width 0.36s cubic-bezier(0.17, 0.89, 0.33, 1.36) 0s,
      margin 0.36s cubic-bezier(0.17, 0.89, 0.33, 1.36) 0s;
    width: 0px;
    margin-right: 0px;
  
    .loading & {
      width: 1.5rem;
      margin-right: 0.625rem;
    }
  
    svg {
      pointer-events: none;
      width: 20;
      height: 20;
      fill: none;
      stroke: currentcolor;
      stroke-width: 2;
      stroke-linecap: round;
      stroke-linejoin: round;
      transform-origin: center center;
      animation: 1.5s linear infinite spin;
      position: absolute;
      left: 0px;
    }
  }
  
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
  